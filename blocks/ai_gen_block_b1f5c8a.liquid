{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-press-media-{{ ai_gen_id }} {
    width: 100%;
    background-color: {{ block.settings.background_color }};
    padding: {{ block.settings.section_padding }}px 20px;
    opacity: 0;
    transform: translateY(50px);
    transition: opacity 0.8s ease, transform 0.8s ease;
     font-family: 'Futura', 'Avenir', 'Helvetica Neue', Arial, sans-serif !important; 
  }


  .ai-press-media-{{ ai_gen_id }}.ai-visible {
    opacity: 1;
    transform: translateY(0);
  }

  .ai-press-media-container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    text-align: center;
  }

  .ai-press-media-heading-{{ ai_gen_id }} {
    font-family: 'Playfair Display', serif;
    font-size: {{ block.settings.heading_size }}px;
    color: {{ block.settings.text_color }};
    margin: 0 0 20px 0;
    font-weight: 400;
    line-height: 1.2;
    font-weight: 700;
  }

  .ai-press-media-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_size }}px;
    color: {{ block.settings.text_color }};
    margin: 0 auto60px auto;
    max-width: auto;
    line-height: 1.6;opacity: 0.9;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    
  }

  .ai-press-media-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 30px;
    margin-top: 40px;
  }

  .ai-press-media-card-{{ ai_gen_id }} {
    background-color: {{ block.settings.card_background_color }};
    border-radius: {{ block.settings.card_border_radius }}px;
    border: 1px solid rgba(255,255,255,0.08);
    overflow: hidden;
    text-align: left; 
    transition: transform 0.3s ease, box-shadow 0.3s ease;opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.6s ease, transform 0.6s ease;
  }

  .ai-press-media-card-{{ ai_gen_id }}.ai-visible {
    opacity: 1;
    transform: translateY(0);
  }

  .ai-press-media-card-{{ ai_gen_id }}:hover {
    transform: translateY(-5px);
    box-shadow: 0 12px 28px rgba(0, 0, 0, 0.15);
  }

  .ai-press-media-card-image-{{ ai_gen_id }} {
    width: 100%;
    height: 200px;
    overflow: hidden;
    position: relative;
  }

  .ai-press-media-card-image-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;transition: transform 0.3s ease;
  }

  .ai-press-media-card-{{ ai_gen_id }}:hover .ai-press-media-card-image-{{ ai_gen_id }} img {
    transform: scale(1.05);
  }

  .ai-press-media-card-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #2a2a2a;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-press-media-card-placeholder-{{ ai_gen_id }} svg {
    width: 60px;
    height: 60px;
    opacity: 0.3;
    color: {{ block.settings.text_color }};
  }

  .ai-press-media-card-content-{{ ai_gen_id }} {
    padding: 25px;
  }

  .ai-press-media-card-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.card_title_size }}px;
    color: {{ block.settings.text_color }};
    font-weight: 700;
    text-transform: uppercase;
    margin: 0 0 12px 0;
    line-height: 1.3;
  }

  .ai-press-media-card-excerpt-{{ ai_gen_id }} {
    font-size: {{ block.settings.card_excerpt_size }}px;
    color: {{ block.settings.text_color }};
    margin: 0 0 20px 0;
    line-height: 1.5;
    opacity: 0.85;
  }

  .ai-press-media-card-link-{{ ai_gen_id }} {
    display: inline-block;
    color: {{ block.settings.link_color }};
    text-decoration: none;
    font-size: 14px;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    border-bottom: 1px solid transparent;
    transition: border-color 0.3s ease;
  }

  .ai-press-media-card-link-{{ ai_gen_id }}:hover {
    border-bottom-color: {{ block.settings.link_color }};
    color: #f4c542; 
  }

  @media screen and (max-width: 768px) {
    .ai-press-media-heading-{{ ai_gen_id }} {
      font-size: {{ block.settings.heading_size | times: 0.7 }}px;
    }

    .ai-press-media-description-{{ ai_gen_id }} {
      font-size: {{ block.settings.description_size | times: 0.9 }}px;margin-bottom: 40px;
    }

    .ai-press-media-grid-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
      gap: 20px;
    }
    .ai-press-media-card-{{ ai_gen_id }} {
      padding: 20px; 
    }

    .ai-press-media-card-content-{{ ai_gen_id }} {
      padding: 20px;
    }
  }
{% endstyle %}<press-media-{{ ai_gen_id }}
  class="ai-press-media-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-press-media-container-{{ ai_gen_id }}">
    {% if block.settings.heading != blank %}
      <h2 class="ai-press-media-heading-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
    {% endif %}

    {% if block.settings.description != blank %}
      <div class="ai-press-media-description-{{ ai_gen_id }}">{{ block.settings.description }}</div>
    {% endif %}

    <div class="ai-press-media-grid-{{ ai_gen_id }}">
      {% for i in (1..5) %}
        {% liquid
          assign article_key = 'article_' | append: i
          assign title_key = 'article_' | append: i | append: '_title'
          assign excerpt_key = 'article_' | append: i | append: '_excerpt'
          assign image_key = 'article_' | append: i | append: '_image'
          assign link_key = 'article_' | append: i | append: '_link'

          assign article = block.settings[article_key]
          assign custom_title = block.settings[title_key]
          assign custom_excerpt = block.settings[excerpt_key]
          assign custom_image = block.settings[image_key]
          assign custom_link = block.settings[link_key]

          assign display_title = custom_title
          assign display_excerpt = custom_excerpt
          assign display_image = custom_image
          assign display_link = custom_link

          if article != blank
            if custom_title == blank
              assign display_title = article.title
            endif
            if custom_excerpt == blank
              assign display_excerpt = article.excerpt
            endif
            if custom_image == blank
              assign display_image = article.image
            endif
            if custom_link == blank
              assign display_link = article.url
            endif
          endif
        %}

        {% if display_title != blank or article != blank %}
          <article class="ai-press-media-card-{{ ai_gen_id }}">
            {% comment %} <div class="ai-press-media-card-image-{{ ai_gen_id }}">
              {% if display_image %}
                <img
                  src="{{ display_image | image_url: width: 400 }}"
                  alt="{{ display_image.alt | escape }}"
                  loading="lazy"
                width="400"
                  height="200"
                >
              {% else %}
                {% comment %} <div class="ai-press-media-card-placeholder-{{ ai_gen_id }}">
                  {{ 'image' | placeholder_svg_tag }}
                </div> {% endcomment %}
              {% endif %}
            </div> {% endcomment %}

            <div class="ai-press-media-card-content-{{ ai_gen_id }}">
              {% if display_title != blank %}
                <h3 class="ai-press-media-card-title-{{ ai_gen_id }}">{{ display_title }}</h3>
              {% endif %}

              {% if display_excerpt != blank %}
                <div class="ai-press-media-card-excerpt-{{ ai_gen_id }}">{{ display_excerpt }}</div>
              {% endif %}

              {% if display_link != blank %}
                <a href="{{ display_link }}" class="ai-press-media-card-link-{{ ai_gen_id }}">
                  {{ block.settings.read_more_text }}
                </a>
              {% endif %}
            </div>
          </article>
        {% endif %}
      {% endfor %}
    </div>
  </div>
</press-media-{{ ai_gen_id }}><script>
  (function() {
    class PressMedia{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.setupScrollReveal();
      }

      setupScrollReveal() {
        const observer = new IntersectionObserver((entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              entry.target.classList.add('ai-visible');
              
              if (entry.target.classList.contains('ai-press-media-{{ ai_gen_id }}')) {
                const cards = entry.target.querySelectorAll('.ai-press-media-card-{{ ai_gen_id }}');
                cards.forEach((card, index) => {
                  setTimeout(() => {
                    card.classList.add('ai-visible');
                  }, index * 100);
                });
              }
            }
          });
        }, {
          threshold: 0.1,rootMargin: '0px 0px -50px 0px'
        });

        observer.observe(this);

        const cards = this.querySelectorAll('.ai-press-media-card-{{ ai_gen_id }}');
        cards.forEach((card) => {
          observer.observe(card);
        });
      }
    }

    customElements.define('press-media-{{ ai_gen_id }}', PressMedia{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Press and Media",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Press & Media"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description",
      "default": "Discover what the media is saying about our brand and latest developments."
    },
    {
      "type": "text",
      "id": "read_more_text",
      "label": "Read more text",
      "default": "Read Full Story"
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "card_background_color",
      "label": "Card background color",
      "default": "#2a2a2a"
    },
    {
      "type": "color",
      "id": "link_color",
      "label": "Link color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 40,
      "max": 120,
      "step": 10,
      "unit": "px",
      "label": "Section padding",
      "default": 80
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 24,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 48
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 14,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Description size",
      "default": 18
    },
    {
      "type": "range",
      "id": "card_title_size",
      "min": 16,
      "max": 28,
      "step": 1,
      "unit": "px",
      "label": "Card title size",
      "default": 20
    },
    {
      "type": "range",
      "id": "card_excerpt_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Card excerpt size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Article1"
    },
    {
      "type": "article",
      "id": "article_1",
      "label": "Article"
    },
    {
      "type": "text",
      "id": "article_1_title",
      "label": "Custom title"
    },
    {
      "type": "textarea",
      "id": "article_1_excerpt",
      "label": "Custom excerpt"
    },
    {
      "type": "image_picker",
      "id": "article_1_image",
      "label": "Custom image"
    },
    {
      "type": "url",
      "id": "article_1_link",
      "label": "Custom link"
    },
    {
      "type": "header",
      "content": "Article 2"
    },
    {
      "type": "article",
      "id": "article_2",
      "label": "Article"
    },
    {
      "type": "text",
      "id": "article_2_title",
      "label": "Custom title"
    },
    {
      "type": "textarea",
      "id": "article_2_excerpt",
      "label": "Custom excerpt"
    },
    {
      "type": "image_picker",
      "id": "article_2_image",
      "label": "Custom image"
    },
    {
      "type": "url",
      "id": "article_2_link",
      "label": "Custom link"
    },
    {
      "type": "header",
      "content": "Article 3"
    },
    {
      "type": "article",
      "id": "article_3",
      "label": "Article"
    },
    {
      "type": "text",
      "id": "article_3_title",
      "label": "Custom title"
    },
    {
      "type": "textarea",
      "id": "article_3_excerpt",
      "label": "Custom excerpt"
    },
    {
      "type": "image_picker",
      "id": "article_3_image",
      "label": "Custom image"
    },
    {
      "type": "url",
      "id": "article_3_link",
      "label": "Custom link"
    },
    {
      "type": "header",
      "content": "Article 4"
    },
    {
      "type": "article",
      "id": "article_4",
      "label": "Article"
    },
    {
      "type": "text",
      "id": "article_4_title",
      "label": "Custom title"
    },
    {
      "type": "textarea",
      "id": "article_4_excerpt",
      "label": "Custom excerpt"
    },
    {
      "type": "image_picker",
      "id": "article_4_image",
      "label": "Custom image"
    },
    {
      "type": "url",
      "id": "article_4_link",
      "label": "Custom link"
    },
    {
      "type": "header",
      "content": "Article 5"
    },
    {
      "type": "article",
      "id": "article_5",
      "label": "Article"
    },
    {
      "type": "text",
      "id": "article_5_title",
      "label": "Custom title"
    },
    {
      "type": "textarea",
      "id": "article_5_excerpt",
      "label": "Custom excerpt"
    },
    {
      "type": "image_picker",
      "id": "article_5_image",
      "label": "Custom image"
    },
    {
      "type": "url",
      "id": "article_5_link",
      "label": "Custom link"
    }
  ],
  "presets": [
    {
      "name": "Press and Media"
    }
  ]
}
{% endschema %}